#include <stdio.h>
#include <stdlib.h>
#include <math.h>

int board[20], count;

void print(int n);
int place(int row, int column);
void queen(int row, int n);

int main() {
    int n;
    printf("N Queen problem using Backtracking.");
    printf("\n\nEnter number of queens : ");
    scanf("%d", &n);

    count = 0; // Initialize the solution count
    queen(1, n); // Start the backtracking process

    if (count == 0) {
        printf("\n\nNo solution exists for %d queens.\n", n);
    }

    return 0;
}

void print(int n) {
    int i, j;
    printf("\n\nSolution %d : \n\n", ++count);
    for (i = 1; i <= n; ++i) {
        for (j = 1; j <= n; ++j) {
            if (board[i] == j)
                printf("\tQ");
            else
                printf("\t-");
        }
        printf("\n");
    }
}

int place(int row, int column) {
    int i;
    for (i = 1; i <= row - 1; ++i) {
        if (board[i] == column || abs(board[i] - column) == abs(i - row))
            return 0;
    }
    return 1;
}

void queen(int row, int n) {
    int column;
    for (column = 1; column <= n; ++column) {
        if (place(row, column)) {
            board[row] = column;
            if (row == n)
                print(n);
            else
                queen(row + 1, n);
        }
    }
}

